// Generated by Dagger (https://dagger.dev).
package ru.surf.other.ui.viewModels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.surf.other.services.apiService.OtherApiService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OtherViewModel_Factory implements Factory<OtherViewModel> {
  private final Provider<OtherApiService> apiServiceProvider;

  public OtherViewModel_Factory(Provider<OtherApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public OtherViewModel get() {
    return newInstance(apiServiceProvider.get());
  }

  public static OtherViewModel_Factory create(Provider<OtherApiService> apiServiceProvider) {
    return new OtherViewModel_Factory(apiServiceProvider);
  }

  public static OtherViewModel newInstance(OtherApiService apiService) {
    return new OtherViewModel(apiService);
  }
}
