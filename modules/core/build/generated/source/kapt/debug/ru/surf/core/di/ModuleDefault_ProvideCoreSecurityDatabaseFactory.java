// Generated by Dagger (https://dagger.dev).
package ru.surf.core.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.surf.core.base.CoreSecurityDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleDefault_ProvideCoreSecurityDatabaseFactory implements Factory<CoreSecurityDatabase> {
  private final Provider<Context> contextProvider;

  public ModuleDefault_ProvideCoreSecurityDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public CoreSecurityDatabase get() {
    return provideCoreSecurityDatabase(contextProvider.get());
  }

  public static ModuleDefault_ProvideCoreSecurityDatabaseFactory create(
      Provider<Context> contextProvider) {
    return new ModuleDefault_ProvideCoreSecurityDatabaseFactory(contextProvider);
  }

  public static CoreSecurityDatabase provideCoreSecurityDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(ModuleDefault.INSTANCE.provideCoreSecurityDatabase(context));
  }
}
