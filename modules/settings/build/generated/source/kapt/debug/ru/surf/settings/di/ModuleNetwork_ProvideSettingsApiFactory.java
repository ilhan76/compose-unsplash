// Generated by Dagger (https://dagger.dev).
package ru.surf.settings.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;
import ru.surf.settings.services.api.SettingsApi;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleNetwork_ProvideSettingsApiFactory implements Factory<SettingsApi> {
  private final Provider<Retrofit> retrofitProvider;

  public ModuleNetwork_ProvideSettingsApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SettingsApi get() {
    return provideSettingsApi(retrofitProvider.get());
  }

  public static ModuleNetwork_ProvideSettingsApiFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new ModuleNetwork_ProvideSettingsApiFactory(retrofitProvider);
  }

  public static SettingsApi provideSettingsApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(ModuleNetwork.INSTANCE.provideSettingsApi(retrofit));
  }
}
