// Generated by Dagger (https://dagger.dev).
package ru.surf.settings.ui.viewModels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.surf.settings.data.preferences.SettingsPreferences;
import ru.surf.settings.services.apiService.SettingsApiService;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsViewModel_Factory implements Factory<SettingsViewModel> {
  private final Provider<SettingsApiService> apiServiceProvider;

  private final Provider<SettingsPreferences> preferencesProvider;

  public SettingsViewModel_Factory(Provider<SettingsApiService> apiServiceProvider,
      Provider<SettingsPreferences> preferencesProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public SettingsViewModel get() {
    return newInstance(apiServiceProvider.get(), preferencesProvider.get());
  }

  public static SettingsViewModel_Factory create(Provider<SettingsApiService> apiServiceProvider,
      Provider<SettingsPreferences> preferencesProvider) {
    return new SettingsViewModel_Factory(apiServiceProvider, preferencesProvider);
  }

  public static SettingsViewModel newInstance(SettingsApiService apiService,
      SettingsPreferences preferences) {
    return new SettingsViewModel(apiService, preferences);
  }
}
