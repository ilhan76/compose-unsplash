// Generated by Dagger (https://dagger.dev).
package ru.surf.users.di;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.surf.users.base.UsersDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleDefault_ProvideUsersDatabaseFactory implements Factory<UsersDatabase> {
  private final Provider<Application> applicationProvider;

  public ModuleDefault_ProvideUsersDatabaseFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public UsersDatabase get() {
    return provideUsersDatabase(applicationProvider.get());
  }

  public static ModuleDefault_ProvideUsersDatabaseFactory create(
      Provider<Application> applicationProvider) {
    return new ModuleDefault_ProvideUsersDatabaseFactory(applicationProvider);
  }

  public static UsersDatabase provideUsersDatabase(Application application) {
    return Preconditions.checkNotNullFromProvides(ModuleDefault.INSTANCE.provideUsersDatabase(application));
  }
}
