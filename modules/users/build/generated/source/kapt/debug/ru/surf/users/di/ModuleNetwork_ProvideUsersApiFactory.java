// Generated by Dagger (https://dagger.dev).
package ru.surf.users.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;
import ru.surf.users.services.api.UsersApi;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ModuleNetwork_ProvideUsersApiFactory implements Factory<UsersApi> {
  private final Provider<Retrofit> retrofitProvider;

  public ModuleNetwork_ProvideUsersApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UsersApi get() {
    return provideUsersApi(retrofitProvider.get());
  }

  public static ModuleNetwork_ProvideUsersApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new ModuleNetwork_ProvideUsersApiFactory(retrofitProvider);
  }

  public static UsersApi provideUsersApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(ModuleNetwork.INSTANCE.provideUsersApi(retrofit));
  }
}
